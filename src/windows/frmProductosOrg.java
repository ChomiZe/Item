/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;

import item.conexion;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chotra
 */
public class frmProductosOrg extends javax.swing.JDialog {

    conexion conex;
    Statement ejecutar;
    ResultSet resultado;
    String sentencia;
    char operacion;
    DefaultTableModel tabla = new DefaultTableModel();

    /**
     * Creates new form frmProductosOrg
     */
    public frmProductosOrg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtBarras = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtNombreP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPrecioC = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPrecioVenta = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cmboxsecciones = new javax.swing.JComboBox();
        cmboxMarcas = new javax.swing.JComboBox();
        cmboxUbicaciones = new javax.swing.JComboBox();
        cmboxProcedencia = new javax.swing.JComboBox();
        txtProdNac = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cmbCategorias = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("REGISTRO DE PRODUCTOS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("ID Procuctos->");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Codigo de Barras->");

        txtID.setEditable(false);
        txtID.setFocusable(false);

        txtBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBarrasKeyTyped(evt);
            }
        });

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cod.Barras", "Nombre Prod", "P.Costo", "P.Venta", "Stock M.", "Porc. IVA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos.getTableHeader().setReorderingAllowed(false);
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProductos);
        tablaProductos.getColumnModel().getColumn(0).setMinWidth(50);
        tablaProductos.getColumnModel().getColumn(0).setMaxWidth(50);
        tablaProductos.getColumnModel().getColumn(1).setMinWidth(70);
        tablaProductos.getColumnModel().getColumn(1).setMaxWidth(70);
        tablaProductos.getColumnModel().getColumn(2).setMinWidth(100);
        tablaProductos.getColumnModel().getColumn(2).setMaxWidth(100);
        tablaProductos.getColumnModel().getColumn(3).setMinWidth(70);
        tablaProductos.getColumnModel().getColumn(3).setMaxWidth(70);
        tablaProductos.getColumnModel().getColumn(4).setMinWidth(70);
        tablaProductos.getColumnModel().getColumn(4).setMaxWidth(70);
        tablaProductos.getColumnModel().getColumn(5).setMinWidth(70);
        tablaProductos.getColumnModel().getColumn(5).setMaxWidth(70);
        tablaProductos.getColumnModel().getColumn(6).setMinWidth(70);
        tablaProductos.getColumnModel().getColumn(6).setMaxWidth(70);

        btnBuscar.setIcon(new javax.swing.ImageIcon("D:\\NetBeansProjects\\ITEM\\Button Icon\\1378827158_search.png")); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon("D:\\NetBeansProjects\\ITEM\\Button Icon\\1378826392_add_list.png")); // NOI18N
        btnAgregar.setText("AÃ±adir");
        btnAgregar.setToolTipText("click para agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon("D:\\NetBeansProjects\\ITEM\\Button Icon\\1378826531_save_as.png")); // NOI18N
        btnGuardar.setText("Aceptar");
        btnGuardar.setToolTipText("click para guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon("D:\\NetBeansProjects\\ITEM\\Button Icon\\1378826616_cancel.png")); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("click para cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon("D:\\NetBeansProjects\\ITEM\\Button Icon\\1378826672_edit.png")); // NOI18N
        btnModificar.setText("Editar");
        btnModificar.setToolTipText("click para modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon("D:\\NetBeansProjects\\ITEM\\Button Icon\\1378826847_gem_cancel_2.png")); // NOI18N
        btnEliminar.setText("Suprimir");
        btnEliminar.setToolTipText("click para eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCerrar.setIcon(new javax.swing.ImageIcon("D:\\NetBeansProjects\\ITEM\\Button Icon\\1378826965_sign-out.png")); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.setToolTipText("click para cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Nombre Producto->");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Precio de Costo->");

        txtPrecioC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioCKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("Precio de Venta->");

        txtPrecioVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioVentaActionPerformed(evt);
            }
        });
        txtPrecioVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioVentaKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("Producto Nacional->");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setText("Stock Minimo->");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setText("ID Secciones->");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("ID Marcas->");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setText("ID Ubicaciones->");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setText("ID Procedencia->");

        cmboxsecciones.setToolTipText("Click para deslizar");

        cmboxMarcas.setToolTipText("click para deslizar");

        cmboxUbicaciones.setToolTipText("click para deslizar");
        cmboxUbicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxUbicacionesActionPerformed(evt);
            }
        });

        cmboxProcedencia.setToolTipText("click para deslizar");

        jLabel14.setIcon(new javax.swing.ImageIcon("D:\\NetBeansProjects\\ITEM\\Button Icon\\ubicaciones.png")); // NOI18N
        jLabel14.setText("jLabel4");

        cmbCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriasActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel15.setText("Categorias->");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(btnBuscar)
                .addGap(43, 43, 43))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID)
                            .addComponent(txtPrecioC, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtProdNac, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmboxUbicaciones, javax.swing.GroupLayout.Alignment.TRAILING, 0, 95, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel15))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBarras)
                            .addComponent(txtPrecioVenta)
                            .addComponent(cmboxProcedencia, 0, 103, Short.MAX_VALUE)
                            .addComponent(cmbCategorias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombreP)
                            .addComponent(txtStock)
                            .addComponent(cmboxMarcas, 0, 97, Short.MAX_VALUE)
                            .addComponent(cmboxsecciones, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCerrar))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBuscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtPrecioC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtProdNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtNombreP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmboxsecciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(cmbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jLabel13)
                        .addComponent(cmboxUbicaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmboxProcedencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(cmboxMarcas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseClicked
        cargarCuadros();
    }//GEN-LAST:event_tablaProductosMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarProd();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        accionAgregar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        accionGuardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        accionCancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        accionModificar(); // TODO add your handling code here:
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        accionEliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void txtPrecioVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioVentaActionPerformed

    private void cmboxUbicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboxUbicacionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmboxUbicacionesActionPerformed

    private void txtBarrasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarrasKeyTyped
         char car = evt.getKeyChar();
        if((car < '0' || car > '9')){
        evt.consume();
        }
    
    }//GEN-LAST:event_txtBarrasKeyTyped

    private void txtPrecioCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCKeyTyped
         char car = evt.getKeyChar();
        if((car < '0' || car > '9')){
        evt.consume();
        }
    }//GEN-LAST:event_txtPrecioCKeyTyped

    private void txtPrecioVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioVentaKeyTyped
        // TODO add your handling code here:
         char car = evt.getKeyChar();
        if((car < '0' || car > '9')){
        evt.consume();
        }
    }//GEN-LAST:event_txtPrecioVentaKeyTyped

    private void cmbCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCategoriasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmProductosOrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmProductosOrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmProductosOrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmProductosOrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmProductosOrg dialog = new frmProductosOrg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox cmbCategorias;
    private javax.swing.JComboBox cmboxMarcas;
    private javax.swing.JComboBox cmboxProcedencia;
    private javax.swing.JComboBox cmboxUbicaciones;
    private javax.swing.JComboBox cmboxsecciones;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtBarras;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombreP;
    private javax.swing.JTextField txtPrecioC;
    private javax.swing.JTextField txtPrecioVenta;
    private javax.swing.JTextField txtProdNac;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables

    private void inicio() {
        try {
            ejecutar = conex.getConexion().createStatement();
            mostrarProductos();
            cargarSeciones();
            cargarMarcas();
            cargarUbicaciones();
            cargarProcedencia();
            cargarCategorias();
            modoEdicion(false);
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void modoEdicion(boolean vL) {
        txtID.setEnabled(vL);
        txtBarras.setEnabled(vL);
        txtNombreP.setEnabled(vL);
        txtPrecioC.setEnabled(vL);
        txtPrecioVenta.setEnabled(vL);
        txtStock.setEnabled(vL);

        cmboxMarcas.setEditable(vL);
        cmboxProcedencia.setEditable(vL);
        cmboxUbicaciones.setEditable(vL);
        cmboxsecciones.setEditable(vL);


        btnAgregar.setEnabled(!vL);
        btnGuardar.setEnabled(vL);
        btnCancelar.setEnabled(vL);
        btnModificar.setEnabled(!vL);
        btnEliminar.setEnabled(!vL);
        btnCerrar.setEnabled(!vL);

        tablaProductos.setEnabled(!vL);

    }

    private void accionAgregar() {
        sentencia = "SELECT MAX(idproductos) FROM ITEMS";
        //operacion = 'A';
        try {
            resultado = ejecutar.executeQuery(sentencia);
            resultado.first();
            limpiarCuadros();
            txtID.setText(Integer.toString(resultado.getInt(1) + 1));
            modoEdicion(true);
            operacion = 'A';
            txtBarras.grabFocus();
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void accionGuardar() {
        String v1 = txtID.getText();
        String v2 = txtBarras.getText();
        String v3 = txtNombreP.getText();
        String v4 = txtPrecioC.getText();
        String v5 = txtPrecioVenta.getText();
        String v6 = txtProdNac.getText();
        String v7 = txtStock.getText();
        String v8 = cmboxsecciones.getSelectedItem().toString().substring(0, cmboxsecciones.getSelectedItem().toString().indexOf("-"));
        String v9 = cmboxMarcas.getSelectedItem().toString().substring(0, cmboxMarcas.getSelectedItem().toString().indexOf("-"));
        String v10 = cmboxUbicaciones.getSelectedItem().toString().substring(0, cmboxUbicaciones.getSelectedItem().toString().indexOf("-"));
        String v11 = cmboxProcedencia.getSelectedItem().toString().substring(0, cmboxProcedencia.getSelectedItem().toString().indexOf("-"));
        String v12 = cmbCategorias.getSelectedItem().toString().substring(0, cmbCategorias.getSelectedItem().toString().indexOf("-"));
        if (v3.isEmpty()||v4.isEmpty()||v5.isEmpty()||v6.isEmpty()||v7.isEmpty()||v8.isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe"+ "ingresar datos"," Revise el casillero vacio",JOptionPane.ERROR_MESSAGE);
            txtNombreP.grabFocus();
        }else{
            if(Double.parseDouble(v4)< Double.parseDouble(v5)){
            } 
            }           
        if (operacion == 'A') {
            sentencia = "INSERT INTO ITEMS VALUES("+v1+",'"+v2+"','"+v3+"','"+v4+"',"+v5+ ","+v6+","+v7+","+v8+","+v9+","+v10+","+v11+","+v12+")";
            
        }
        if (operacion == 'M') {
            sentencia = "UPDATE ITEMS SET codigobarras='"+v2+"',nombreprod='"+v3+"',preciocosto='"+v4+"',precioventa='"+v5+"',prodnacional='"+v6+"',stockmin='"+v7+"'idseccion='"+v8+"',idmarcas='"+v9+"',idubicaciones='"+v10+"',idprocedencia='"+v11+"',idcategoria='"+v12+"'WHERE idproductos='"+v1+"'";
        }
        try {
            ejecutar.executeUpdate(sentencia);
            limpiarCuadros();
        } catch (SQLException ex) {
            //Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }
        mostrarProductos();
        modoEdicion(false);
    }

    private void cargarSeciones() {
        sentencia = "SELECT * FROM ITEM_SECCIONES";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            while (resultado.next()) {
                cmboxsecciones.addItem(resultado.getString(1) + "-> " + resultado.getString(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarMarcas() {
        sentencia = "SELECT * FROM ITEM_MARCAS";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            while (resultado.next()) {
                cmboxMarcas.addItem(resultado.getString(1) + "-> " + resultado.getString(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarUbicaciones() {
        sentencia = "SELECT * FROM ITEM_UBICACIONES";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            while (resultado.next()) {
                cmboxUbicaciones.addItem(resultado.getString(1) + "-> " + resultado.getString(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarProcedencia() {
        sentencia = "SELECT * FROM ITEM_PROCEDENCIA";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            while (resultado.next()) {
                cmboxProcedencia.addItem(resultado.getString(1) + "-> " + resultado.getString(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void mostrarProductos() {
        tabla.setRowCount(0);
        sentencia = "SELECT * FROM vistaitem";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            tabla = (DefaultTableModel) tablaProductos.getModel();
            while (resultado.next()) {
                Object fila[] = new Object[7];
                fila[0] = resultado.getInt(1);
                fila[1] = resultado.getString(2);
                fila[2] = resultado.getString(3);
                fila[3] = resultado.getInt(4);
                fila[4] = resultado.getInt(5);
                fila[5] = resultado.getInt(6);
                fila[6] = resultado.getFloat(7);

                tabla.addRow(fila);
            }
            tablaProductos.setModel(tabla);
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarCuadros() {
        int fSel = tablaProductos.getSelectedRow();
        if (fSel >= 0) {
            String xid = tablaProductos.getValueAt(fSel, 0).toString();
            sentencia = "SELECT * FROM vistaitem WHERE idproductos = '"+xid+"'";
            try {
                resultado = ejecutar.executeQuery(sentencia);
                resultado.first();
                txtID.setText(resultado.getString(1));
                txtBarras.setText(resultado.getString(2));
                txtNombreP.setText(resultado.getString(3));
                txtPrecioC.setText(resultado.getString(4));
                txtPrecioVenta.setText(resultado.getString(5));
                txtProdNac.setText(resultado.getString(6));
                txtStock.setText(resultado.getString(7));
                String xc = resultado.getString(8) + "-> " + resultado.getString(8);
                cmboxsecciones.setSelectedItem(xc);
                String xa = resultado.getString(9) + "-> " + resultado.getString(9);
                cmboxMarcas.setSelectedItem(xa);
                String xb = resultado.getString(10) + "-> " + resultado.getString(10);
                cmboxUbicaciones.setSelectedItem(xb);
                String xx = resultado.getString(11) + "-> " + resultado.getString(11);
                cmboxProcedencia.setSelectedItem(xx);
                String xr = resultado.getString(12) + "-> " + resultado.getString(12);
                cmbCategorias.setSelectedItem(xr);
            } catch (SQLException ex) {
                //Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void accionCancelar() {
        modoEdicion(false);
    }

    private void accionModificar() {
        if (tablaProductos.getSelectedRow() >= 0) {
            operacion = 'M';
            modoEdicion(true);
            txtBarras.grabFocus();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningun registro", "Seleccione...", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void accionEliminar() {
        int fSel = tablaProductos.getSelectedRow();
        if (fSel >= 0) {
            String xid = tablaProductos.getValueAt(fSel, 0).toString();
            String xnac = tablaProductos.getValueAt(fSel, 1).toString()+" "+tablaProductos.getValueAt(fSel, 2)+" "+tablaProductos.getValueAt(fSel, 3);
            int resp = JOptionPane.showConfirmDialog(this, "Confirma que desea eliminar el Producto *"+ xnac.toUpperCase()+"* del Sistema?", "Confirme...",
                    JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                sentencia = "DELETE FROM ITEMS WHERE idproductos= "+xid+"";
                try {
                    ejecutar.executeUpdate(sentencia);
                } catch (SQLException ex) {
                    Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        mostrarProductos();
    }

    private void buscarProd() {
        String criterio = JOptionPane.showInputDialog("Ingrese nombre del Producto");
        sentencia = "SELECT * FROM vistaitem WHERE nombreprod LIKE'%"+criterio+"%'";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            while (resultado.next()) {
                Object fila[] = new Object[6];
                fila[0] = resultado.getInt(1);
                fila[1] = resultado.getInt(2);
                fila[2] = resultado.getString(3);
                fila[3] = resultado.getInt(4);
                fila[4] = resultado.getInt(5);
                fila[5] = resultado.getString(6);
                fila[6] = resultado.getInt(7);

                tabla.addRow(fila);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpiarCuadros() {
        txtBarras.setText(null);
        txtID.setText(null);
        txtNombreP.setText(null);
        txtPrecioC.setText(null);
        txtPrecioVenta.setText(null);
        txtProdNac.setText(null);
        txtStock.setText(null);
    }

    private void cargarCategorias() {
        sentencia = "SELECT * FROM categoria";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            while (resultado.next()) {
                cmbCategorias.addItem(resultado.getString(1) + "-> " + resultado.getString(2) + "-> " + resultado.getString(3));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProductosOrg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}